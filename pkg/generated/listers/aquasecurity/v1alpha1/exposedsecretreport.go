// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/aquasecurity/trivy-operator/pkg/apis/aquasecurity/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ExposedSecretReportLister helps list ExposedSecretReports.
// All objects returned here must be treated as read-only.
type ExposedSecretReportLister interface {
	// List lists all ExposedSecretReports in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ExposedSecretReport, err error)
	// ExposedSecretReports returns an object that can list and get ExposedSecretReports.
	ExposedSecretReports(namespace string) ExposedSecretReportNamespaceLister
	ExposedSecretReportListerExpansion
}

// exposedSecretReportLister implements the ExposedSecretReportLister interface.
type exposedSecretReportLister struct {
	indexer cache.Indexer
}

// NewExposedSecretReportLister returns a new ExposedSecretReportLister.
func NewExposedSecretReportLister(indexer cache.Indexer) ExposedSecretReportLister {
	return &exposedSecretReportLister{indexer: indexer}
}

// List lists all ExposedSecretReports in the indexer.
func (s *exposedSecretReportLister) List(selector labels.Selector) (ret []*v1alpha1.ExposedSecretReport, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ExposedSecretReport))
	})
	return ret, err
}

// ExposedSecretReports returns an object that can list and get ExposedSecretReports.
func (s *exposedSecretReportLister) ExposedSecretReports(namespace string) ExposedSecretReportNamespaceLister {
	return exposedSecretReportNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ExposedSecretReportNamespaceLister helps list and get ExposedSecretReports.
// All objects returned here must be treated as read-only.
type ExposedSecretReportNamespaceLister interface {
	// List lists all ExposedSecretReports in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.ExposedSecretReport, err error)
	// Get retrieves the ExposedSecretReport from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.ExposedSecretReport, error)
	ExposedSecretReportNamespaceListerExpansion
}

// exposedSecretReportNamespaceLister implements the ExposedSecretReportNamespaceLister
// interface.
type exposedSecretReportNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ExposedSecretReports in the indexer for a given namespace.
func (s exposedSecretReportNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.ExposedSecretReport, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.ExposedSecretReport))
	})
	return ret, err
}

// Get retrieves the ExposedSecretReport from the indexer for a given namespace and name.
func (s exposedSecretReportNamespaceLister) Get(name string) (*v1alpha1.ExposedSecretReport, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("exposedsecretreport"), name)
	}
	return obj.(*v1alpha1.ExposedSecretReport), nil
}
